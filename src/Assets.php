<?php


namespace zwarthoorn\eveapi;


use GuzzleHttp\ClientInterface;
use Swagger\Client\Eve\Api\AssetsApi;
use Swagger\Client\Eve\ApiException;
use Swagger\Client\Eve\Configuration;
use Swagger\Client\Eve\HeaderSelector;
use zwarthoorn\eveapi\Authentication\EveAuth;

class Assets extends AssetsApi
{

    /**
     * @var EveAuth
     */
    private $eveAuth;

    public function __construct(ClientInterface $client = null, Configuration $config = null, HeaderSelector $selector = null, $host_index = 0)
    {
        if ($config === null)
        {
            $this->eveAuth = new EveAuth();
            $config = new Configuration();
            $config->setAccessToken($this->eveAuth->makeAuthentication());
        }

        parent::__construct($client, $config, $selector, $host_index);
    }

    public function getCharactersCharacterIdAssets($character_id = null, $datasource = 'tranquility', $if_none_match = null, $page = 1, $token = null)
    {
        if ($character_id === null)
        {
            $character_id = $this->eveAuth->getResourceOwner()->getId();
        }

        try{
            return parent::getCharactersCharacterIdAssets($character_id, $datasource, $if_none_match, $page, $token);
        }catch (ApiException $exception)
        {

        }

    }


    public function postCharactersCharacterIdAssetsLocations($item_ids, $character_id = null, $datasource = 'tranquility', $token = null)
    {
        if ($character_id === null)
        {
            $character_id = $this->eveAuth->getResourceOwner()->getId();
        }
        try {
            return parent::postCharactersCharacterIdAssetsLocations($character_id, $item_ids, $datasource, $token); // TODO: Change the autogenerated stub
        }catch (ApiException $exception)
        {

        }
    }

    public function postCharactersCharacterIdAssetsNames($item_ids, $character_id = null, $datasource = 'tranquility', $token = null)
    {
        if ($character_id === null)
        {
            $character_id = $this->eveAuth->getResourceOwner()->getId();
        }

        return parent::postCharactersCharacterIdAssetsNames($character_id, $item_ids, $datasource, $token); // TODO: Change the autogenerated stub
    }
}